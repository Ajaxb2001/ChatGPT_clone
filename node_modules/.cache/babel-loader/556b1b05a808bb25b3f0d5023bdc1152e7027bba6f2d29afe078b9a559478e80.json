{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abashett\\\\interface_chatgpt\\\\ChatGPT_clone\\\\src\\\\components\\\\Header.js\";\nimport React from \"react\";\nimport \"../CSS/Header.css\";\nimport cisco from \"../cisco.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = ({\n  toggleSidebar,\n  startNewChat\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menu-icon\",\n        onClick: toggleSidebar,\n        title: \"Open-Sidebar\",\n        children: \"\\u2630 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-chat-icon\",\n        onClick: startNewChat,\n        title: \"New Chat\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: cisco,\n      alt: \"Logo\",\n      className: \"header-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header-title\",\n      children: \"ChatGPT Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","cisco","jsxDEV","_jsxDEV","Header","toggleSidebar","startNewChat","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/abashett/interface_chatgpt/ChatGPT_clone/src/components/Header.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../CSS/Header.css\";\r\nimport cisco from \"../cisco.png\";\r\nconst Header = ({ toggleSidebar, startNewChat }) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header-left\">\r\n        <button\r\n          className=\"menu-icon\"\r\n          onClick={toggleSidebar}\r\n          title=\"Open-Sidebar\"\r\n        >\r\n          &#9776; {/* Unicode for the hamburger menu icon */}\r\n        </button>\r\n        <button\r\n          className=\"new-chat-icon\"\r\n          onClick={startNewChat}\r\n          title=\"New Chat\"\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n      <img src={cisco} alt=\"Logo\" className=\"header-logo\" />\r\n\r\n      <h1 className=\"header-title\">ChatGPT Interface</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAC1B,OAAOC,KAAK,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,MAAM,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAa,CAAC,KAAK;EAClD,oBACEH,OAAA;IAAKI,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBL,OAAA;MAAKI,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BL,OAAA;QACEI,SAAS,EAAC,WAAW;QACrBE,OAAO,EAAEJ,aAAc;QACvBK,KAAK,EAAC,cAAc;QAAAF,QAAA,EACrB;MACS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACTX,OAAA;QACEI,SAAS,EAAC,eAAe;QACzBE,OAAO,EAAEH,YAAa;QACtBI,KAAK,EAAC,UAAU;QAAAF,QAAA,EACjB;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNX,OAAA;MAAKY,GAAG,EAAEd,KAAM;MAACe,GAAG,EAAC,MAAM;MAACT,SAAS,EAAC;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEtDX,OAAA;MAAII,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAACG,EAAA,GAxBIb,MAAM;AA0BZ,eAAeA,MAAM;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}